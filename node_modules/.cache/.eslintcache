[{"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\index.js":"1","C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\App.js":"2","C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\Header.js":"3","C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\Home.js":"4","C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\Contact.js":"5","C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\About.js":"6","C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\stacks.js":"7"},{"size":313,"mtime":1653982599915,"results":"8","hashOfConfig":"9"},{"size":144,"mtime":1653982599899,"results":"10","hashOfConfig":"9"},{"size":2105,"mtime":1653982599900,"results":"11","hashOfConfig":"9"},{"size":1164,"mtime":1653982599907,"results":"12","hashOfConfig":"9"},{"size":124,"mtime":1653982599905,"results":"13","hashOfConfig":"9"},{"size":118,"mtime":1653982599904,"results":"14","hashOfConfig":"9"},{"size":6688,"mtime":1654012558635,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3d2jjs",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\index.js",[],[],"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\App.js",[],[],"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\Header.js",["38","39"],[],"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\Home.js",[],[],"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\Contact.js",[],[],"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\About.js",[],[],"C:\\Users\\DB-L-115\\OneDrive\\Desktop\\react learning\\task1\\madhu\\src\\components\\pages\\stacks.js",["40"],[],"import React, {useState} from \"react\";\r\n\r\nclass Stacks extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n        \r\n\t\t\tstacks: {\r\n\t\t\t\treact: true,\r\n\t\t\t\tangular: false,\r\n\t\t\t\tvue: false,\r\n\t\t\t\tnoBackend: true,\r\n\t\t\t\tnodejsTypeORM: false,\r\n\t\t\t\tnodejsSequeslize: false,\r\n                postgreSQL: true,\r\n                mySQL: false,\r\n                aname: null\r\n            },\r\n\t\t};\r\n\t}\r\n\r\n\r\n\thandleClick = (event) => {\r\n\t\tconst { name, checked } = event.target;\r\n\r\n\t\tthis.setState((prevState) => {\r\n\t\t\tconst stacks = prevState.stacks;\r\n\t\t\tstacks[name] = checked;\r\n\t\t\treturn stacks;\r\n\t\t});\r\n\t};\r\n\r\n    handleOnchange = (e) => {\r\n        this.setState({[e.target.name]:e.target.value})\r\n        console.log('button is clicked')\r\n    }\r\n\r\n\trender() {\r\n       \r\n\t\tconst selectedStacks = Object.keys(this.state.stacks)\r\n\t\t\t.filter((key) => this.state.stacks[key])\r\n\t\t\t.join(\", \");\r\n            \r\n        \r\n\t\treturn (\r\n\t\t\t<div className=\"stacks\">\r\n\t\t\t\t<main className=\"\">\r\n                    <section className=\"section section-2 p-0 w-100 py-4\">\r\n                        <div className=\"\">\r\n                            <h5 className=\"title position-relative\">Application Name</h5>\r\n                            <label>Name:</label><br />\r\n                            <input onChange={this.handleOnchange} value={this.state.aname} type='text' placeholder=\"Enter application name\" name=\"aname\" />\r\n                        </div>\r\n                    </section>\r\n\r\n\t\t\t\t\t<div className=\"container p-0 step\">\r\n                    <h5 class=\"title position-relative\">Stack</h5>\r\n                        <h4 className=\"stack-title\">Frontend</h4>\r\n\t\t\t\t\t\t<div className=\"row row-cols-3\"> \r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.react} onChange={this.handleClick} type=\"checkbox\" name=\"react\" /> \r\n                                    <h5>React</h5>\r\n                                    <p>React is a frontend library used to create stateful and reusable UI components for developing large web applications.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.angular} onChange={this.handleClick} type=\"checkbox\" name=\"angular\" /> \r\n                                    <h5>Angular</h5>\r\n                                    <p>Angular quickly established itself as a mainstream technology used by millions of developers.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.vue} onChange={this.handleClick} type=\"checkbox\" name=\"vue\" /> \r\n                                    <h5>Vue</h5>\r\n                                    <p>Vue.js is a progressive framework for building user interfaces. Vue was built to be incrementally adoptable for users.</p>\r\n                                </div>  \r\n                            </div>\r\n                        </div>\r\n\t\t\t\t\t\t\r\n                        <h4 className=\"stack-title\">Backend <span>(Ready-to-use admin interface/CRUD app)</span></h4>\r\n                        <div className=\"row row-cols-3\">\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.noBackend} onChange={this.handleClick} type=\"checkbox\" name=\"noBackend\" /> \r\n                                    <h5>No Backend</h5>\r\n                                    <p>Application without backend and database, only with front-end. 'create-react-app' for example.</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.nodejsTypeORM} onChange={this.handleClick} type=\"checkbox\" name=\"NodejsTypeORM\" /> \r\n                                    <h5>Node js + TypeORM</h5>\r\n                                    <p>Application without backend and database, only with front-end. 'create-react-app' for example.</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.nodejsSequeslize} onChange={this.handleClick} type=\"checkbox\" name=\"nodejsSequeslize\" /> \r\n                                    <h5>Node js + Sequeslize</h5>\r\n                                    <p>Application without backend and database, only with front-end. 'create-react-app' for example.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <h4 className=\"stack-title\">Database</h4>\r\n                        <div className=\"row row-cols-3\">\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.postgreSQL} onChange={this.handleClick} type=\"checkbox\" name=\"postgreSQL\" /> \r\n                                    <h5>PostgreSQL</h5>\r\n                                    <p>Application without backend and database, only with front-end. 'create-react-app' for example.</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <div className=\"card\">\r\n                                    <input checked={this.state.stacks.mySQL} onChange={this.handleClick} type=\"checkbox\" name=\"mySQL\" /> \r\n                                    <h5>MySQL</h5>\r\n                                    <p>Application without backend and database, only with front-end. 'create-react-app' for example.</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button onClick={this.handleOnchange} className=\"btn btn-orange my-4\">Submit</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n                    <p>Application Name: {this.state.aname}</p>\r\n                    <p>Your stacks are: {selectedStacks}</p> \r\n\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Stacks;",{"ruleId":"41","severity":1,"message":"42","line":16,"column":45,"nodeType":"43","endLine":16,"endColumn":65},{"ruleId":"44","severity":1,"message":"45","line":16,"column":45,"nodeType":"43","endLine":16,"endColumn":65},{"ruleId":"46","severity":1,"message":"47","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":24},"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]